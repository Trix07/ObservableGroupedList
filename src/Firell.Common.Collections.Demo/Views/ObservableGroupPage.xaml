<!-- Copyright (c) Microsoft Corporation and Contributors. -->
<!-- Licensed under the MIT License. -->

<Page
    x:Class="Firell.Common.Collections.Demo.Views.ObservableGroupPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="using:Firell.Common.Collections.Demo.Views"
    mc:Ignorable="d">

    <Grid RowSpacing="20" Padding="20, 10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Spacing="10">
            <StackPanel Margin="0, 0, 0, 5">
                <TextBlock Text="ObservableGroup&lt;TValueKey, TValue&gt;" Style="{StaticResource TitleTextBlockStyle}"/>
                <TextBlock Text="Firell.Common.Collections" Foreground="Gray"/>
            </StackPanel>

            <RichTextBlock TextWrapping="Wrap" IsTextSelectionEnabled="True">
                <Paragraph>
                    The
                    <Bold>ObservableGroup&lt;TValueKey, TValue&gt;</Bold>
                    is a custom observable group inheriting from
                    <Bold>ObservableSortedList&lt;TKey, TValue&gt;</Bold>
                    that provide sorting support. It provides a way to associate a group with a key. This isn't very useful on it's own, but combined in a collection can be used to group up data.
                    <LineBreak/>
                </Paragraph>

                <Paragraph>
                    Sorting is done based on the key through an
                    <Bold>IComparer&lt;TValueKey&gt;</Bold> .
                    <LineBreak/>
                </Paragraph>

                <Paragraph>
                    To get started bind the
                    <Bold>ObservableGroup&lt;TValueKey, TValue&gt;</Bold>
                    values to a ItemsSource property.
                </Paragraph>
            </RichTextBlock>

            <Border Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" CornerRadius="4" Padding="20, 10">
                <ScrollViewer HorizontalScrollMode="Enabled" HorizontalScrollBarVisibility="Auto">
                    <TextBlock Text="&lt;ListView ItemsSource=&quot;{x:Bind ViewModel.PersonGroup.Values, Mode=OneWay}&quot;&gt;" IsTextSelectionEnabled="True"/>
                </ScrollViewer>
            </Border>
        </StackPanel>

        <Grid Grid.Row="1" RowSpacing="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="0" Text="Sample" Style="{StaticResource TitleTextBlockStyle}"/>

            <Border Grid.Row="1" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" CornerRadius="4" Padding="20, 10">
                <ListView Grid.Row="1" Header="{x:Bind ViewModel.PersonGroup.Key, Mode=OneWay}" ItemsSource="{x:Bind ViewModel.PersonGroup.Values, Mode=OneWay}" Style="{StaticResource PersonsListView}">
                    <ListView.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding}" FontWeight="SemiBold" FontSize="18"/>
                                <MenuFlyoutSeparator Margin="0, 6, 0, 2"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListView.HeaderTemplate>
                    
                    <ListView.GroupStyle>
                        <GroupStyle HeaderContainerStyle="{StaticResource StretchGroupContent}" HeaderTemplate="{StaticResource GroupDataTemplate}"/>
                    </ListView.GroupStyle>
                </ListView>
            </Border>
        </Grid>
    </Grid>
</Page>
